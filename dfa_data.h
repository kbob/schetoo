/* automatically generated by lex.py */

#include <stdint.h>

#define YY_INITIAL_STATE 62
#define YY_COMMON_STATE 47
#define YY_ERROR_STATE 47
#define YY_ACCEPT_COUNT 75

typedef uint8_t yy_token_t;
typedef uint8_t yy_cc_t;
typedef uint8_t yy_state_t;
typedef uint16_t yy_state_index_t;

typedef struct yy_delta_row {
    yy_cc_t          yy_len;
    yy_state_index_t yy_index;
} yy_delta_row_t;

typedef enum yy_token_name {
    YY_ATMOSPHERE,
    YY_IDENTIFIER,
    YY_BOOLEAN,
    YY_NUMBER,
    YY_CHARACTER,
    YY_STRING,
    YY_LPAREN,
    YY_RPAREN,
    YY_LBRACKET,
    YY_RBRACKET,
    YY_BEGIN_VECTOR,
    YY_BEGIN_BYTEVECTOR,
    YY_QUOTE,
    YY_QUASIQUOTE,
    YY_UNQUOTE,
    YY_UNQUOTE_SPLICING,
    YY_PERIOD,
    YY_SYNTAX,
    YY_QUASISYNTAX,
    YY_UNSYNTAX,
    YY_UNSYNTAX_SPLICING,
    YY_BEGIN_DATUM_COMMENT,
    YY_BEGIN_NESTED_COMMENT,
} yy_token_name_t;

static const yy_cc_t yy_charmap[] = {
    53,                                 /* '\x00' */
    53,                                 /* '\x01' */
    53,                                 /* '\x02' */
    53,                                 /* '\x03' */
    53,                                 /* '\x04' */
    53,                                 /* '\x05' */
    53,                                 /* '\x06' */
    53,                                 /* '\x07' */
    53,                                 /* '\x08' */
    44,                                 /* '\t' */
    45,                                 /* '\n' */
    48,                                 /* '\x0b' */
    48,                                 /* '\x0c' */
    47,                                 /* '\r' */
    53,                                 /* '\x0e' */
    53,                                 /* '\x0f' */
    53,                                 /* '\x10' */
    53,                                 /* '\x11' */
    53,                                 /* '\x12' */
    53,                                 /* '\x13' */
    53,                                 /* '\x14' */
    53,                                 /* '\x15' */
    53,                                 /* '\x16' */
    53,                                 /* '\x17' */
    53,                                 /* '\x18' */
    53,                                 /* '\x19' */
    53,                                 /* '\x1a' */
    53,                                 /* '\x1b' */
    53,                                 /* '\x1c' */
    53,                                 /* '\x1d' */
    53,                                 /* '\x1e' */
    53,                                 /* '\x1f' */
    44,                                 /* ' ' */
    30,                                 /* '!' */
    24,                                 /* '"' */
    31,                                 /* '#' */
    30,                                 /* '$' */
    30,                                 /* '%' */
    30,                                 /* '&' */
    32,                                 /* "'" */
    46,                                 /* '(' */
    49,                                 /* ')' */
    30,                                 /* '*' */
    6,                                  /* '+' */
    33,                                 /* ',' */
    6,                                  /* '-' */
    8,                                  /* '.' */
    19,                                 /* '/' */
    0,                                  /* '0' */
    1,                                  /* '1' */
    2,                                  /* '2' */
    2,                                  /* '3' */
    2,                                  /* '4' */
    2,                                  /* '5' */
    2,                                  /* '6' */
    2,                                  /* '7' */
    3,                                  /* '8' */
    4,                                  /* '9' */
    30,                                 /* ':' */
    25,                                 /* ';' */
    30,                                 /* '<' */
    30,                                 /* '=' */
    34,                                 /* '>' */
    30,                                 /* '?' */
    17,                                 /* '@' */
    21,                                 /* 'A' */
    22,                                 /* 'B' */
    21,                                 /* 'C' */
    9,                                  /* 'D' */
    10,                                 /* 'E' */
    11,                                 /* 'F' */
    30,                                 /* 'G' */
    30,                                 /* 'H' */
    35,                                 /* 'I' */
    30,                                 /* 'J' */
    30,                                 /* 'K' */
    16,                                 /* 'L' */
    30,                                 /* 'M' */
    30,                                 /* 'N' */
    36,                                 /* 'O' */
    30,                                 /* 'P' */
    30,                                 /* 'Q' */
    30,                                 /* 'R' */
    16,                                 /* 'S' */
    37,                                 /* 'T' */
    30,                                 /* 'U' */
    30,                                 /* 'V' */
    30,                                 /* 'W' */
    38,                                 /* 'X' */
    30,                                 /* 'Y' */
    30,                                 /* 'Z' */
    50,                                 /* '[' */
    26,                                 /* '\\' */
    51,                                 /* ']' */
    30,                                 /* '^' */
    30,                                 /* '_' */
    39,                                 /* '`' */
    18,                                 /* 'a' */
    20,                                 /* 'b' */
    23,                                 /* 'c' */
    12,                                 /* 'd' */
    13,                                 /* 'e' */
    5,                                  /* 'f' */
    40,                                 /* 'g' */
    40,                                 /* 'h' */
    14,                                 /* 'i' */
    40,                                 /* 'j' */
    40,                                 /* 'k' */
    16,                                 /* 'l' */
    40,                                 /* 'm' */
    15,                                 /* 'n' */
    41,                                 /* 'o' */
    40,                                 /* 'p' */
    40,                                 /* 'q' */
    27,                                 /* 'r' */
    16,                                 /* 's' */
    27,                                 /* 't' */
    42,                                 /* 'u' */
    28,                                 /* 'v' */
    40,                                 /* 'w' */
    29,                                 /* 'x' */
    40,                                 /* 'y' */
    40,                                 /* 'z' */
    53,                                 /* '{' */
    7,                                  /* '|' */
    53,                                 /* '}' */
    30,                                 /* '~' */
    53,                                 /* '\x7f' */
};

static const yy_cc_t yy_unicode_catmap[] = {
    30,                                 /* UGC_LETTER_UPPERCASE */
    30,                                 /* UGC_LETTER_LOWERCASE */
    30,                                 /* UGC_LETTER_TITLECASE */
    30,                                 /* UGC_LETTER_MODIFIER */
    30,                                 /* UGC_LETTER_OTHER */
    30,                                 /* UGC_MARK_NONSPACING */
    43,                                 /* UGC_MARK_SPACING_COMBINING */
    43,                                 /* UGC_MARK_ENCLOSING */
    43,                                 /* UGC_NUMBER_DECIMAL_DIGIT */
    30,                                 /* UGC_NUMBER_LETTER */
    30,                                 /* UGC_NUMBER_OTHER */
    30,                                 /* UGC_PUNCTUATION_CONNECTOR */
    30,                                 /* UGC_PUNCTUATION_DASH */
    53,                                 /* UGC_PUNCTUATION_OPEN */
    53,                                 /* UGC_PUNCTUATION_CLOSE */
    53,                                 /* UGC_PUNCTUATION_INITIAL_QUOTE */
    53,                                 /* UGC_PUNCTUATION_FINAL_QUOTE */
    30,                                 /* UGC_PUNCTUATION_OTHER */
    30,                                 /* UGC_SYMBOL_MATH */
    30,                                 /* UGC_SYMBOL_CURRENCY */
    30,                                 /* UGC_SYMBOL_MODIFIER */
    30,                                 /* UGC_SYMBOL_OTHER */
    44,                                 /* UGC_SEPARATOR_SPACE */
    48,                                 /* UGC_SEPARATOR_LINE */
    48,                                 /* UGC_SEPARATOR_PARAGRAPH */
    53,                                 /* UGC_OTHER_CONTROL */
    53,                                 /* UGC_OTHER_FORMAT */
    53,                                 /* UGC_OTHER_SURROGATE */
    30,                                 /* UGC_OTHER_PRIVATE_USE */
    53,                                 /* UGC_OTHER_NOT_ASSIGNED */
};

#define YY_NEXT_LINE_CC 0x2d            /* U+0085 */
#define YY_LINE_SEPARATOR_CC 0x34       /* U+2028 */
#define YY_PARAGRAPH_SEPARATOR_CC 0x36  /* U+2029 */

static const yy_token_t yy_accepts[] = {
    YY_ATMOSPHERE,
    YY_ATMOSPHERE,
    YY_IDENTIFIER,
    YY_IDENTIFIER,
    YY_IDENTIFIER,
    YY_IDENTIFIER,
    YY_IDENTIFIER,
    YY_IDENTIFIER,
    YY_IDENTIFIER,
    YY_IDENTIFIER,
    YY_IDENTIFIER,
    YY_IDENTIFIER,
    YY_IDENTIFIER,
    YY_NUMBER,
    YY_NUMBER,
    YY_NUMBER,
    YY_NUMBER,
    YY_NUMBER,
    YY_NUMBER,
    YY_NUMBER,
    YY_NUMBER,
    YY_NUMBER,
    YY_NUMBER,
    YY_NUMBER,
    YY_CHARACTER,
    YY_STRING,
    YY_LPAREN,
    YY_RPAREN,
    YY_LBRACKET,
    YY_RBRACKET,
    YY_BEGIN_VECTOR,
    YY_BEGIN_BYTEVECTOR,
};

static const yy_delta_row_t yy_delta[] = {
    { 0, 0 }, /* 0 */
    { 55, 0 }, /* 1 */
    { 44, 55 }, /* 2 */
    { 47, 99 }, /* 3 */
    { 44, 146 }, /* 4 */
    { 44, 190 }, /* 5 */
    { 55, 234 }, /* 6 */
    { 55, 289 }, /* 7 */
    { 47, 344 }, /* 8 */
    { 45, 391 }, /* 9 */
    { 44, 436 }, /* 10 */
    { 55, 480 }, /* 11 */
    { 44, 535 }, /* 12 */
    { 18, 579 }, /* 13 */
    { 16, 597 }, /* 14 */
    { 18, 613 }, /* 15 */
    { 8, 631 }, /* 16 */
    { 18, 639 }, /* 17 */
    { 20, 657 }, /* 18 */
    { 20, 677 }, /* 19 */
    { 18, 697 }, /* 20 */
    { 17, 715 }, /* 21 */
    { 5, 732 }, /* 22 */
    { 0, 737 }, /* 23 */
    { 0, 737 }, /* 24 */
    { 0, 737 }, /* 25 */
    { 0, 737 }, /* 26 */
    { 0, 737 }, /* 27 */
    { 0, 737 }, /* 28 */
    { 0, 737 }, /* 29 */
    { 0, 737 }, /* 30 */
    { 0, 737 }, /* 31 */
    { 45, 737 }, /* 32 */
    { 19, 782 }, /* 33 */
    { 20, 801 }, /* 34 */
    { 17, 821 }, /* 35 */
    { 1, 838 }, /* 36 */
    { 5, 839 }, /* 37 */
    { 16, 844 }, /* 38 */
    { 6, 860 }, /* 39 */
    { 9, 866 }, /* 40 */
    { 24, 875 }, /* 41 */
    { 1, 899 }, /* 42 */
    { 5, 900 }, /* 43 */
    { 5, 905 }, /* 44 */
    { 9, 910 }, /* 45 */
    { 16, 919 }, /* 46 */
    { 0, 935 }, /* 47 */
    { 5, 935 }, /* 48 */
    { 45, 940 }, /* 49 */
    { 5, 985 }, /* 50 */
    { 5, 990 }, /* 51 */
    { 53, 995 }, /* 52 */
    { 16, 1048 }, /* 53 */
    { 55, 1064 }, /* 54 */
    { 26, 1119 }, /* 55 */
    { 55, 1145 }, /* 56 */
    { 7, 1200 }, /* 57 */
    { 5, 1207 }, /* 58 */
    { 9, 1212 }, /* 59 */
    { 16, 1221 }, /* 60 */
    { 16, 1237 }, /* 61 */
    { 52, 1253 }, /* 62 */
    { 5, 1305 }, /* 63 */
    { 46, 1310 }, /* 64 */
    { 5, 1356 }, /* 65 */
    { 6, 1361 }, /* 66 */
    { 7, 1367 }, /* 67 */
    { 15, 1374 }, /* 68 */
    { 5, 1389 }, /* 69 */
    { 19, 1394 }, /* 70 */
    { 15, 1413 }, /* 71 */
    { 5, 1428 }, /* 72 */
    { 15, 1433 }, /* 73 */
    { 7, 1448 }, /* 74 */
};

static const yy_state_t yy_next_states[] = {
    /*  1 */ 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 0, 54, 1, 54, 54, 54, 54, 1, 54, 1,
    /*  2 */ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 4, 10,
    /*  3 */ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 47, 47, 31,
    /*  4 */ 10, 10, 10, 3, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
    /*  5 */ 12, 12, 12, 12, 12, 12, 10, 10, 10, 12, 12, 12, 12, 12, 10, 10, 10, 10, 12, 10, 12, 12, 12, 12, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
    /*  6 */ 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 10, 6, 9, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
    /*  7 */ 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 54, 0, 54, 1, 54, 54, 54, 54, 1, 54, 1,
    /*  8 */ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 10, 2, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 47, 47, 30,
    /*  9 */ 10, 10, 10, 10, 10, 6, 10, 10, 10, 10, 10, 10, 10, 10, 10, 6, 10, 10, 6, 10, 6, 10, 10, 10, 6, 10, 6, 6, 6, 5, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 52,
    /* 10 */ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
    /* 11 */ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
    /* 12 */ 12, 12, 12, 12, 12, 12, 10, 10, 10, 12, 12, 12, 12, 12, 10, 10, 10, 10, 12, 10, 12, 12, 12, 12, 10, 6, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
    /* 13 */ 13, 13, 13, 13, 13, 47, 38, 65, 47, 47, 47, 47, 47, 47, 47, 47, 47, 45,
    /* 14 */ 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 66,
    /* 15 */ 15, 15, 15, 15, 15, 74, 38, 65, 47, 74, 74, 74, 74, 74, 47, 47, 74, 45,
    /* 16 */ 16, 16, 16, 16, 16, 47, 47, 37,
    /* 17 */ 17, 17, 17, 17, 17, 47, 38, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 45,
    /* 18 */ 18, 18, 18, 18, 18, 74, 38, 65, 15, 74, 74, 74, 74, 74, 47, 47, 74, 45, 47, 58,
    /* 19 */ 19, 19, 19, 19, 19, 67, 47, 37, 21, 67, 67, 67, 67, 67, 47, 47, 67, 47, 47, 69,
    /* 20 */ 47, 47, 47, 47, 47, 47, 38, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 45,
    /* 21 */ 21, 21, 21, 21, 21, 67, 47, 37, 47, 67, 67, 67, 67, 67, 47, 47, 67,
    /* 22 */ 22, 22, 22, 22, 22,
    /* 32 */ 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 56,
    /* 33 */ 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 46,
    /* 34 */ 34, 34, 34, 34, 34, 57, 47, 44, 35, 57, 57, 57, 57, 57, 23, 47, 57, 47, 47, 63,
    /* 35 */ 35, 35, 35, 35, 35, 57, 47, 44, 47, 57, 57, 57, 57, 57, 23, 47, 57,
    /* 36 */ 23,
    /* 37 */ 23, 23, 23, 23, 23,
    /* 38 */ 34, 34, 34, 34, 34, 47, 47, 47, 72, 47, 47, 47, 47, 47, 14, 33,
    /* 39 */ 47, 47, 47, 47, 47, 59,
    /* 40 */ 47, 47, 47, 47, 47, 47, 47, 47, 42,
    /* 41 */ 55, 55, 55, 55, 55, 55, 47, 47, 47, 55, 55, 55, 55, 55, 47, 47, 47, 47, 55, 47, 55, 55, 55, 55,
    /* 42 */ 73,
    /* 43 */ 16, 16, 16, 16, 16,
    /* 44 */ 73, 73, 73, 73, 73,
    /* 45 */ 19, 19, 19, 19, 19, 47, 53, 47, 51,
    /* 46 */ 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 40,
    /* 48 */ 13, 13, 13, 13, 13,
    /* 49 */ 47, 47, 47, 47, 47, 56, 47, 47, 47, 47, 47, 47, 47, 47, 47, 56, 47, 47, 56, 47, 56, 47, 47, 47, 56, 47, 56, 56, 56, 41, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 52,
    /* 50 */ 71, 71, 71, 71, 71,
    /* 51 */ 21, 21, 21, 21, 21,
    /* 52 */ 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 32, 47, 64, 47, 47, 47, 47, 32,
    /* 53 */ 19, 19, 19, 19, 19, 47, 47, 47, 51, 47, 47, 47, 47, 47, 61, 70,
    /* 54 */ 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 0, 54, 1, 54, 54, 54, 54, 1, 54, 1,
    /* 55 */ 55, 55, 55, 55, 55, 55, 47, 47, 47, 55, 55, 55, 55, 55, 47, 47, 47, 47, 55, 47, 55, 55, 55, 55, 47, 56,
    /* 56 */ 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 25, 56, 49, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
    /* 57 */ 71, 71, 71, 71, 71, 47, 50,
    /* 58 */ 17, 17, 17, 17, 17,
    /* 59 */ 47, 47, 47, 47, 47, 47, 47, 47, 36,
    /* 60 */ 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 59,
    /* 61 */ 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 39,
    /* 62 */ 18, 18, 18, 18, 18, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 6, 7, 10, 10, 10, 10, 10, 8, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 47, 0, 0, 26, 0, 0, 27, 28, 29,
    /* 63 */ 68, 68, 68, 68, 68,
    /* 64 */ 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 56, 32,
    /* 65 */ 20, 20, 20, 20, 20,
    /* 66 */ 47, 47, 47, 47, 47, 40,
    /* 67 */ 16, 16, 16, 16, 16, 47, 43,
    /* 68 */ 68, 68, 68, 68, 68, 47, 47, 47, 47, 47, 47, 47, 47, 47, 23,
    /* 69 */ 22, 22, 22, 22, 22,
    /* 70 */ 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 60,
    /* 71 */ 71, 71, 71, 71, 71, 47, 47, 44, 47, 47, 47, 47, 47, 47, 23,
    /* 72 */ 35, 35, 35, 35, 35,
    /* 73 */ 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 23,
    /* 74 */ 13, 13, 13, 13, 13, 47, 48,
};
